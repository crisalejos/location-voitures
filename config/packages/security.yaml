security:
    #definition des roles
    role_hierarchy:
        #PUBLIC_ACCESS: PUBLIC_ACCESS
        ROLE_USER: ROLE_USER
        ROLE_ADMIN: ROLE_ADMIN
    enable_authenticator_manager: true
    #definition du encoder des passwords
    #encoders:
        #Symfony\Component\Security\Core\User\User: plaintext
    #definition du encoder des passwords hashers    
    password_hashers:
        App\Entity\User:
            algorithm: auto
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:           
            lazy: false
            provider: app_user_provider
            custom_authenticator: App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
            entry_point: App\Security\AuthenticationEntryPoint
            #access_denied_handler: App\Security\AccessDeniedHandler
            # access_denied_url: /login 
            access_denied_url: /denied_access         
        # everybody
        default:            
            lazy: true          
    # vérifie que l'utilisateur a le(s) rôle(s) requis pour accéder au contenu
    access_control:
            - { path: ^/gestion, roles: ROLE_ADMIN }
            - { path: ^/user, roles: ROLE_ADMIN }
            - { path: ^/booking, roles: ROLE_ADMIN }
            - { path: ^/cars, roles: ROLE_ADMIN }
            - { path: ^/service, roles: ROLE_USER } 
            #- { path: ^/site, roles: PUBLIC_ACCESS }       